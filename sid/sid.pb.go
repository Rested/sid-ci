// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sid.proto

package sid

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthStatus_Status int32

const (
	HealthStatus_INACTIVE HealthStatus_Status = 0
	HealthStatus_READY    HealthStatus_Status = 1
	HealthStatus_WORKING  HealthStatus_Status = 2
	HealthStatus_LEAVING  HealthStatus_Status = 3
)

var HealthStatus_Status_name = map[int32]string{
	0: "INACTIVE",
	1: "READY",
	2: "WORKING",
	3: "LEAVING",
}

var HealthStatus_Status_value = map[string]int32{
	"INACTIVE": 0,
	"READY":    1,
	"WORKING":  2,
	"LEAVING":  3,
}

func (x HealthStatus_Status) String() string {
	return proto.EnumName(HealthStatus_Status_name, int32(x))
}

func (HealthStatus_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_923cdea5d0e24e4a, []int{0, 0}
}

type Job_JobStatus int32

const (
	Job_QUEUED    Job_JobStatus = 0
	Job_BUILDING  Job_JobStatus = 1
	Job_ABANDONED Job_JobStatus = 2
	Job_COMPLETED Job_JobStatus = 3
)

var Job_JobStatus_name = map[int32]string{
	0: "QUEUED",
	1: "BUILDING",
	2: "ABANDONED",
	3: "COMPLETED",
}

var Job_JobStatus_value = map[string]int32{
	"QUEUED":    0,
	"BUILDING":  1,
	"ABANDONED": 2,
	"COMPLETED": 3,
}

func (x Job_JobStatus) String() string {
	return proto.EnumName(Job_JobStatus_name, int32(x))
}

func (Job_JobStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_923cdea5d0e24e4a, []int{1, 0}
}

type JobRunEvent_EventType int32

const (
	JobRunEvent_RUN_LOG JobRunEvent_EventType = 0
	JobRunEvent_ERROR   JobRunEvent_EventType = 1
)

var JobRunEvent_EventType_name = map[int32]string{
	0: "RUN_LOG",
	1: "ERROR",
}

var JobRunEvent_EventType_value = map[string]int32{
	"RUN_LOG": 0,
	"ERROR":   1,
}

func (x JobRunEvent_EventType) String() string {
	return proto.EnumName(JobRunEvent_EventType_name, int32(x))
}

func (JobRunEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_923cdea5d0e24e4a, []int{2, 0}
}

// HealthStatus
type HealthStatus struct {
	Status               HealthStatus_Status  `protobuf:"varint,1,opt,name=status,proto3,enum=sid.HealthStatus_Status" json:"status,omitempty"`
	StatusAt             *timestamp.Timestamp `protobuf:"bytes,2,opt,name=status_at,json=statusAt,proto3" json:"status_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *HealthStatus) Reset()         { *m = HealthStatus{} }
func (m *HealthStatus) String() string { return proto.CompactTextString(m) }
func (*HealthStatus) ProtoMessage()    {}
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_923cdea5d0e24e4a, []int{0}
}

func (m *HealthStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthStatus.Unmarshal(m, b)
}
func (m *HealthStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthStatus.Marshal(b, m, deterministic)
}
func (m *HealthStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthStatus.Merge(m, src)
}
func (m *HealthStatus) XXX_Size() int {
	return xxx_messageInfo_HealthStatus.Size(m)
}
func (m *HealthStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthStatus.DiscardUnknown(m)
}

var xxx_messageInfo_HealthStatus proto.InternalMessageInfo

func (m *HealthStatus) GetStatus() HealthStatus_Status {
	if m != nil {
		return m.Status
	}
	return HealthStatus_INACTIVE
}

func (m *HealthStatus) GetStatusAt() *timestamp.Timestamp {
	if m != nil {
		return m.StatusAt
	}
	return nil
}

type Job struct {
	RepoName             string               `protobuf:"bytes,1,opt,name=repo_name,json=repoName,proto3" json:"repo_name,omitempty"`
	RepoSshUrl           string               `protobuf:"bytes,2,opt,name=repo_ssh_url,json=repoSshUrl,proto3" json:"repo_ssh_url,omitempty"`
	CommitHexsha         string               `protobuf:"bytes,3,opt,name=commit_hexsha,json=commitHexsha,proto3" json:"commit_hexsha,omitempty"`
	JobStatus            Job_JobStatus        `protobuf:"varint,4,opt,name=job_status,json=jobStatus,proto3,enum=sid.Job_JobStatus" json:"job_status,omitempty"`
	StatusAt             *timestamp.Timestamp `protobuf:"bytes,5,opt,name=status_at,json=statusAt,proto3" json:"status_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_923cdea5d0e24e4a, []int{1}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetRepoName() string {
	if m != nil {
		return m.RepoName
	}
	return ""
}

func (m *Job) GetRepoSshUrl() string {
	if m != nil {
		return m.RepoSshUrl
	}
	return ""
}

func (m *Job) GetCommitHexsha() string {
	if m != nil {
		return m.CommitHexsha
	}
	return ""
}

func (m *Job) GetJobStatus() Job_JobStatus {
	if m != nil {
		return m.JobStatus
	}
	return Job_QUEUED
}

func (m *Job) GetStatusAt() *timestamp.Timestamp {
	if m != nil {
		return m.StatusAt
	}
	return nil
}

type JobRunEvent struct {
	Type                 JobRunEvent_EventType `protobuf:"varint,1,opt,name=type,proto3,enum=sid.JobRunEvent_EventType" json:"type,omitempty"`
	Content              string                `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	EventAt              *timestamp.Timestamp  `protobuf:"bytes,3,opt,name=event_at,json=eventAt,proto3" json:"event_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *JobRunEvent) Reset()         { *m = JobRunEvent{} }
func (m *JobRunEvent) String() string { return proto.CompactTextString(m) }
func (*JobRunEvent) ProtoMessage()    {}
func (*JobRunEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_923cdea5d0e24e4a, []int{2}
}

func (m *JobRunEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRunEvent.Unmarshal(m, b)
}
func (m *JobRunEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRunEvent.Marshal(b, m, deterministic)
}
func (m *JobRunEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRunEvent.Merge(m, src)
}
func (m *JobRunEvent) XXX_Size() int {
	return xxx_messageInfo_JobRunEvent.Size(m)
}
func (m *JobRunEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRunEvent.DiscardUnknown(m)
}

var xxx_messageInfo_JobRunEvent proto.InternalMessageInfo

func (m *JobRunEvent) GetType() JobRunEvent_EventType {
	if m != nil {
		return m.Type
	}
	return JobRunEvent_RUN_LOG
}

func (m *JobRunEvent) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *JobRunEvent) GetEventAt() *timestamp.Timestamp {
	if m != nil {
		return m.EventAt
	}
	return nil
}

type CheckInResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckInResponse) Reset()         { *m = CheckInResponse{} }
func (m *CheckInResponse) String() string { return proto.CompactTextString(m) }
func (*CheckInResponse) ProtoMessage()    {}
func (*CheckInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_923cdea5d0e24e4a, []int{3}
}

func (m *CheckInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckInResponse.Unmarshal(m, b)
}
func (m *CheckInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckInResponse.Marshal(b, m, deterministic)
}
func (m *CheckInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckInResponse.Merge(m, src)
}
func (m *CheckInResponse) XXX_Size() int {
	return xxx_messageInfo_CheckInResponse.Size(m)
}
func (m *CheckInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CheckInResponse proto.InternalMessageInfo

func (m *CheckInResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

func init() {
	proto.RegisterEnum("sid.HealthStatus_Status", HealthStatus_Status_name, HealthStatus_Status_value)
	proto.RegisterEnum("sid.Job_JobStatus", Job_JobStatus_name, Job_JobStatus_value)
	proto.RegisterEnum("sid.JobRunEvent_EventType", JobRunEvent_EventType_name, JobRunEvent_EventType_value)
	proto.RegisterType((*HealthStatus)(nil), "sid.HealthStatus")
	proto.RegisterType((*Job)(nil), "sid.Job")
	proto.RegisterType((*JobRunEvent)(nil), "sid.JobRunEvent")
	proto.RegisterType((*CheckInResponse)(nil), "sid.CheckInResponse")
}

func init() { proto.RegisterFile("sid.proto", fileDescriptor_923cdea5d0e24e4a) }

var fileDescriptor_923cdea5d0e24e4a = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x41, 0x6f, 0xd3, 0x4c,
	0x10, 0xcd, 0xc6, 0x6d, 0x6a, 0x4f, 0xd2, 0xef, 0x33, 0x0b, 0x87, 0x28, 0x1c, 0x88, 0xdc, 0x03,
	0xb9, 0xe0, 0x96, 0x20, 0xc4, 0x81, 0x93, 0x13, 0x5b, 0x69, 0x42, 0x70, 0x60, 0x9b, 0x14, 0x71,
	0xb2, 0xec, 0x64, 0xa9, 0x53, 0x62, 0xaf, 0xe5, 0x5d, 0x23, 0xfa, 0x57, 0xf8, 0x07, 0x9c, 0x91,
	0xf8, 0x7d, 0x68, 0xd7, 0x76, 0x09, 0x05, 0x09, 0x71, 0xb0, 0x3d, 0xf3, 0xe6, 0x79, 0xdf, 0xcc,
	0x9b, 0x05, 0x83, 0x6f, 0x37, 0x76, 0x96, 0x33, 0xc1, 0xb0, 0xc6, 0xb7, 0x9b, 0xde, 0xa3, 0x2b,
	0xc6, 0xae, 0x76, 0xf4, 0x54, 0x41, 0x51, 0xf1, 0xe1, 0x54, 0x6c, 0x13, 0xca, 0x45, 0x98, 0x64,
	0x25, 0xcb, 0xfa, 0x8e, 0xa0, 0x73, 0x4e, 0xc3, 0x9d, 0x88, 0x2f, 0x44, 0x28, 0x0a, 0x8e, 0xcf,
	0xa0, 0xc5, 0x55, 0xd4, 0x45, 0x7d, 0x34, 0xf8, 0x6f, 0xd8, 0xb5, 0xe5, 0x91, 0xfb, 0x14, 0xbb,
	0xfc, 0x90, 0x8a, 0x87, 0x5f, 0x80, 0x51, 0x46, 0x41, 0x28, 0xba, 0xcd, 0x3e, 0x1a, 0xb4, 0x87,
	0x3d, 0xbb, 0xd4, 0xb5, 0x6b, 0x5d, 0x7b, 0x59, 0xeb, 0x12, 0xbd, 0x24, 0x3b, 0xc2, 0x7a, 0x09,
	0xad, 0x4a, 0xb4, 0x03, 0xfa, 0xd4, 0x77, 0xc6, 0xcb, 0xe9, 0xa5, 0x67, 0x36, 0xb0, 0x01, 0x87,
	0xc4, 0x73, 0xdc, 0xf7, 0x26, 0xc2, 0x6d, 0x38, 0x7a, 0xb7, 0x20, 0xaf, 0xa6, 0xfe, 0xc4, 0x6c,
	0xca, 0x64, 0xee, 0x39, 0x97, 0x32, 0xd1, 0xac, 0x2f, 0x4d, 0xd0, 0x66, 0x2c, 0xc2, 0x0f, 0xc1,
	0xc8, 0x69, 0xc6, 0x82, 0x34, 0x4c, 0xa8, 0x6a, 0xd9, 0x20, 0xba, 0x04, 0xfc, 0x30, 0xa1, 0xb8,
	0x0f, 0x1d, 0x55, 0xe4, 0x3c, 0x0e, 0x8a, 0x7c, 0xa7, 0xba, 0x33, 0x08, 0x48, 0xec, 0x82, 0xc7,
	0xab, 0x7c, 0x87, 0x4f, 0xe0, 0x78, 0xcd, 0x92, 0x64, 0x2b, 0x82, 0x98, 0x7e, 0xe6, 0x71, 0xd8,
	0xd5, 0x14, 0xa5, 0x53, 0x82, 0xe7, 0x0a, 0xc3, 0x4f, 0x01, 0xae, 0x59, 0x14, 0x54, 0xbe, 0x1c,
	0x28, 0x5f, 0xb0, 0xf2, 0x65, 0xc6, 0x22, 0xf9, 0x54, 0x8e, 0x18, 0xd7, 0x75, 0xf8, 0xab, 0x29,
	0x87, 0xff, 0x60, 0xca, 0x18, 0x8c, 0xdb, 0x03, 0x31, 0x40, 0xeb, 0xed, 0xca, 0x5b, 0x79, 0xae,
	0xd9, 0x90, 0x1e, 0x8d, 0x56, 0xd3, 0xb9, 0x2b, 0xc7, 0x47, 0xf8, 0x18, 0x0c, 0x67, 0xe4, 0xf8,
	0xee, 0xc2, 0xf7, 0x5c, 0xb3, 0x29, 0xd3, 0xf1, 0xe2, 0xf5, 0x9b, 0xb9, 0xb7, 0xf4, 0x5c, 0x53,
	0xb3, 0xbe, 0x21, 0x68, 0xcf, 0x58, 0x44, 0x8a, 0xd4, 0xfb, 0x44, 0x53, 0x81, 0x6d, 0x38, 0x10,
	0x37, 0x19, 0xad, 0x56, 0xda, 0xab, 0x5b, 0xaf, 0xeb, 0xb6, 0x7a, 0x2f, 0x6f, 0x32, 0x4a, 0x14,
	0x0f, 0x77, 0xe1, 0x68, 0xcd, 0x52, 0x41, 0x53, 0x51, 0x59, 0x56, 0xa7, 0xf8, 0x39, 0xe8, 0x54,
	0x92, 0xe5, 0x58, 0xda, 0x5f, 0xc7, 0x3a, 0x52, 0x5c, 0x47, 0x58, 0x27, 0x60, 0xdc, 0x6a, 0xc8,
	0x3d, 0x92, 0x95, 0x1f, 0xcc, 0x17, 0x93, 0x72, 0xd9, 0x1e, 0x21, 0x0b, 0x62, 0x22, 0xeb, 0x09,
	0xfc, 0x3f, 0x8e, 0xe9, 0xfa, 0xe3, 0x34, 0x25, 0x94, 0x67, 0x2c, 0xe5, 0x14, 0xf7, 0x40, 0xcf,
	0xab, 0xf8, 0xe7, 0x72, 0xcb, 0x7c, 0xf8, 0x15, 0x01, 0x10, 0x56, 0x08, 0x3a, 0x29, 0xb6, 0x1b,
	0x8a, 0x1f, 0x43, 0x6b, 0x42, 0x85, 0xbc, 0x12, 0xf7, 0x7e, 0xbb, 0xb2, 0x3d, 0xbd, 0x1e, 0xd9,
	0x6a, 0xe0, 0x11, 0xdc, 0xdf, 0xaf, 0x55, 0x92, 0x7f, 0xfa, 0xeb, 0x81, 0x82, 0xee, 0xf4, 0x64,
	0x35, 0xce, 0x10, 0xb6, 0xa1, 0x43, 0xe8, 0x9a, 0xe5, 0x9b, 0xd2, 0x45, 0x6c, 0xde, 0xb5, 0x74,
	0x5f, 0x71, 0x80, 0xa2, 0x96, 0x32, 0xe7, 0xd9, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x63, 0x0e,
	0x33, 0x1c, 0xa0, 0x03, 0x00, 0x00,
}
